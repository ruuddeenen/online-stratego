{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruudd\\\\OneDrive - Office 365 Fontys\\\\SE31\\\\Big Idea - Stratego\\\\Project\\\\online-stratego-client\\\\src\\\\pages\\\\Game.js\";\nimport React, { Component } from 'react';\nimport SockJS from \"sockjs-client\";\nimport * as Stomp from \"@stomp/stompjs\";\nconst height = 800,\n      width = 1000;\nlet stompClient = null;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connect = () => {\n      const socket = new SockJS('http://localhost:9000/ws');\n      stompClient = Stomp.Stomp.over(socket);\n      stompClient.connect({}, function (frame) {\n        console.log(frame.toString());\n        stompClient.subscribe('/topic/game', output => {\n          const obj = JSON.parse(output.body);\n          console.log(obj, 'OUTPUT');\n        });\n      });\n    };\n\n    this.sendMessage = (endPoint, message) => {\n      stompClient.send(endPoint, {}, JSON.stringify(message));\n    };\n\n    this.toggle = () => {\n      this.sendMessage('/app/game', {\n        id: 0,\n        username: 'ruudTest'\n      });\n    };\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      ready: false,\n      board: [],\n      pawns: []\n    }; // Bindings\n\n    this.sendMessage = this.sendMessage.bind(this);\n    this.onMessageRecieved = this.onMessageRecieved.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentDidMount() {\n    this.connect();\n    this.drawBoard();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.board !== prevState.board) {\n      this.drawBoard();\n    }\n\n    if (this.state.pawns !== prevState.pawns) {\n      this.drawPawns();\n    }\n  }\n\n  drawBoard() {\n    console.log('drawing board');\n    const canvas = document.getElementById('canvasBoard');\n    const context = canvas.getContext('2d');\n    const board = this.state.board;\n    const size = board.length;\n\n    for (var y = 0; y < size; y++) {\n      const field = board[y];\n\n      for (var x = 0; x < size; x++) {\n        if (field[x] === 'OPEN') {\n          context.fillStyle = 'green';\n          context.fillRect(width / size * x, height / size * y, width / size - 1, height / size - 1);\n        } else if (field[x] === 'LAKE') {\n          context.fillStyle = 'blue';\n          context.fillRect(width / size * x, height / size * y, width / size - 1, height / size - 1);\n        }\n      }\n    }\n  }\n\n  drawPawns() {\n    console.log('draw pawns');\n  }\n\n  onMessageRecieved(message) {\n    console.log(message, 'MESSAGE RECIEVED');\n  }\n\n  handleMouseClick(e) {\n    this.setState({\n      mouseX: e.nativeEvent.offsetX,\n      mouseY: e.nativeEvent.offsetY\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      style: {\n        paddingBottom: '3rem',\n        fontSize: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Online Stratego\"), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvasWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"canvasBoard\",\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"canvasWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"canvasPawns\",\n      width: width,\n      height: height,\n      onMouseDown: this.handleMouseClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"toggle\"));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/ruudd/OneDrive - Office 365 Fontys/SE31/Big Idea - Stratego/Project/online-stratego-client/src/pages/Game.js"],"names":["React","Component","SockJS","Stomp","height","width","stompClient","Game","constructor","props","connect","socket","over","frame","console","log","toString","subscribe","output","obj","JSON","parse","body","sendMessage","endPoint","message","send","stringify","toggle","id","username","state","mouseX","mouseY","ready","board","pawns","bind","onMessageRecieved","componentDidMount","drawBoard","componentDidUpdate","prevProps","prevState","snapshot","drawPawns","canvas","document","getElementById","context","getContext","size","length","y","field","x","fillStyle","fillRect","handleMouseClick","e","setState","nativeEvent","offsetX","offsetY","render","paddingBottom","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SockJS from \"sockjs-client\";\r\nimport * as Stomp from \"@stomp/stompjs\";\r\n\r\nconst height = 800, width = 1000;\r\nlet stompClient = null;\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mouseX: 0,\r\n            mouseY: 0,\r\n            ready: false,\r\n            board: [],\r\n            pawns: []\r\n        };\r\n\r\n        // Bindings\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.onMessageRecieved = this.onMessageRecieved.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connect();\r\n        this.drawBoard();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.state.board !== prevState.board) {\r\n            this.drawBoard();\r\n        }\r\n        if (this.state.pawns !== prevState.pawns){\r\n            this.drawPawns();\r\n        }\r\n    }\r\n\r\n    connect = () => {\r\n        const socket = new SockJS('http://localhost:9000/ws');\r\n        stompClient = Stomp.Stomp.over(socket);\r\n        stompClient.connect({}, function(frame){\r\n            console.log(frame.toString());\r\n            stompClient.subscribe('/topic/game', (output) => {\r\n                const obj = JSON.parse(output.body);\r\n                console.log(obj, 'OUTPUT');\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    drawBoard() {\r\n        console.log('drawing board');\r\n        const canvas = document.getElementById('canvasBoard');\r\n        const context = canvas.getContext('2d');\r\n\r\n        const board = this.state.board;\r\n        const size = board.length;\r\n\r\n        for (var y = 0; y < size; y++) {\r\n            const field = board[y];\r\n            for (var x = 0; x < size; x++) {\r\n                if (field[x] === 'OPEN') {\r\n                    context.fillStyle = 'green';\r\n                    context.fillRect((width / size) * x, (height / size) * y, width / size - 1, height / size - 1);\r\n                } else if (field[x] === 'LAKE') {\r\n                    context.fillStyle = 'blue';\r\n                    context.fillRect((width / size) * x, (height / size) * y, width / size - 1, height / size - 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    drawPawns(){\r\n        console.log('draw pawns')\r\n    }\r\n\r\n    onMessageRecieved(message) {\r\n        console.log(message, 'MESSAGE RECIEVED');\r\n    }\r\n\r\n    sendMessage = (endPoint, message) => {\r\n        stompClient.send(endPoint, {}, JSON.stringify(message));\r\n    }\r\n\r\n    toggle = () => {\r\n        this.sendMessage('/app/game', {id: 0, username: 'ruudTest'});\r\n    }\r\n\r\n    handleMouseClick(e) {\r\n        this.setState({\r\n            mouseX: e.nativeEvent.offsetX,\r\n            mouseY: e.nativeEvent.offsetY\r\n        });\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='Layout'>\r\n                <header style={{ paddingBottom: '3rem', fontSize: '40px' }}>\r\n                    Online Stratego\r\n                </header>\r\n\r\n                <div className='row' id='left'>\r\n\r\n                </div>\r\n                <div className='row' id='center'>\r\n                    <div className='grid'>\r\n                        <div className='canvasWrapper'>\r\n                            <canvas id='canvasBoard' width={width} height={height} />\r\n                        </div>\r\n                        <div className='canvasWrapper'>\r\n                            <canvas id='canvasPawns' width={width} height={height} onMouseDown={this.handleMouseClick.bind(this)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row' id='right'>\r\n                </div>\r\n\r\n\r\n                <button onClick={this.toggle}>\r\n                    toggle\r\n                </button>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}