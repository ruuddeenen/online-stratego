{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruudd\\\\OneDrive - Office 365 Fontys\\\\SE31\\\\Big Idea - Stratego\\\\Project\\\\online-stratego-client\\\\src\\\\pages\\\\Game.js\";\nimport React, { Component } from 'react';\nimport SockJSClient from 'react-stomp';\nconst height = 800,\n      width = 1000;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = message => {\n      this.clientRef.sendMessage('/app/game', JSON.stringify(message));\n      console.log(JSON.stringify(message), 'MESSAGE SEND');\n    };\n\n    this.toggle = () => {\n      this.setState({\n        ready: !this.state.ready\n      });\n      this.sendMessage(this.state);\n    };\n\n    this.state = {\n      ready: false,\n      board: [['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN']]\n    }; // Bindings\n\n    this.sendMessage = this.sendMessage.bind(this);\n    this.onMessageRecieved = this.onMessageRecieved.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.getCursorPosition = this.getCursorPosition.bind(this);\n  }\n\n  componentDidMount() {\n    this.drawBoard();\n    const canvas = document.getElementById('canvasPawns');\n    canvas.addEventListener('mousedown', function (e) {\n      getCursorPosition(canvas, e);\n    });\n  }\n\n  drawBoard() {\n    console.log('drawing board');\n    const canvas = document.getElementById('canvasBoard');\n    const context = canvas.getContext('2d');\n    const board = this.state.board;\n    const size = board.length;\n\n    for (var y = 0; y < size; y++) {\n      const field = board[y];\n\n      for (var x = 0; x < size; x++) {\n        if (field[x] === 'OPEN') {\n          context.fillStyle = 'green';\n          context.fillRect(width / size * x, height / size * y, width / size - 1, height / size - 1);\n        } else if (field[x] === 'LAKE') {\n          context.fillStyle = 'blue';\n          context.fillRect(width / size * x, height / size * y, width / size - 1, height / size - 1);\n        }\n      }\n    }\n  }\n\n  handleOnClick(e) {\n    e.persist();\n    console.log(e);\n  }\n\n  onMessageRecieved(message) {\n    console.log(message, 'MESSAGE RECIEVED');\n  }\n\n  getCursorPosition(canvas, event) {\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    console.log('X: ' + x + \" Y: \" + y);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      style: {\n        paddingBottom: '3rem',\n        fontSize: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Online Stratego\"), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvasWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"canvasBoard\",\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"canvasWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"canvasPawns\",\n      width: width,\n      height: height,\n      onClick: e => this.handleOnClick(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), \"// Websockets\", React.createElement(\"button\", {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"toggle\"), React.createElement(SockJSClient, {\n      url: 'http://localhost:9000/ws',\n      topics: ['/topic/public'],\n      onMessage: message => {\n        this.onMessageRecieved(message);\n      },\n      ref: client => {\n        this.clientRef = client;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/ruudd/OneDrive - Office 365 Fontys/SE31/Big Idea - Stratego/Project/online-stratego-client/src/pages/Game.js"],"names":["React","Component","SockJSClient","height","width","Game","constructor","props","sendMessage","message","clientRef","JSON","stringify","console","log","toggle","setState","ready","state","board","bind","onMessageRecieved","handleOnClick","getCursorPosition","componentDidMount","drawBoard","canvas","document","getElementById","addEventListener","e","context","getContext","size","length","y","field","x","fillStyle","fillRect","persist","event","rect","getBoundingClientRect","clientX","left","clientY","top","render","paddingBottom","fontSize","client"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SockJSClient from 'react-stomp';\r\n\r\nconst height = 800, width = 1000;\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ready: false,\r\n            board: [\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n            ]\r\n        }\r\n\r\n        // Bindings\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.onMessageRecieved = this.onMessageRecieved.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n        this.getCursorPosition = this.getCursorPosition.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawBoard();\r\n        const canvas = document.getElementById('canvasPawns');\r\n        canvas.addEventListener('mousedown', function(e) {getCursorPosition(canvas, e)});\r\n    }\r\n\r\n\r\n    drawBoard() {\r\n        console.log('drawing board');\r\n        const canvas = document.getElementById('canvasBoard');\r\n        const context = canvas.getContext('2d');\r\n\r\n        const board = this.state.board;\r\n        const size = board.length;\r\n\r\n        for (var y = 0; y < size; y++) {\r\n            const field = board[y];\r\n            for (var x = 0; x < size; x++) {\r\n                if (field[x] === 'OPEN') {\r\n                    context.fillStyle = 'green';\r\n                    context.fillRect((width / size) * x, (height / size) * y, width / size - 1, height / size - 1);\r\n                } else if (field[x] === 'LAKE') {\r\n                    context.fillStyle = 'blue';\r\n                    context.fillRect((width / size) * x, (height / size) * y, width / size - 1, height / size - 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnClick(e){\r\n        e.persist();\r\n        console.log(e);\r\n    }\r\n\r\n    onMessageRecieved(message) {\r\n        console.log(message, 'MESSAGE RECIEVED');\r\n    }\r\n\r\n    sendMessage = (message) => {\r\n        this.clientRef.sendMessage('/app/game', JSON.stringify(message));\r\n        console.log(JSON.stringify(message), 'MESSAGE SEND');\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            ready:  !this.state.ready\r\n        });\r\n        this.sendMessage(this.state);\r\n    }\r\n\r\n    getCursorPosition(canvas, event){\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n        const y = event.clientY - rect.top;\r\n        console.log('X: ' + x + \" Y: \" + y);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='Layout'>\r\n                <header style={{ paddingBottom: '3rem', fontSize: '40px' }}>\r\n                    Online Stratego\r\n                </header>\r\n\r\n                <div className='row' id='left'>\r\n\r\n                </div>\r\n                <div className='row' id='center'>\r\n                    <div className='grid'>\r\n                        <div className='canvasWrapper'>\r\n                            <canvas id='canvasBoard' width={width} height={height} />\r\n                        </div>\r\n                        <div className='canvasWrapper'>\r\n                            <canvas id='canvasPawns' width={width} height={height} onClick={e => this.handleOnClick(e)}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row' id='right'>\r\n\r\n                </div>\r\n\r\n\r\n                // Websockets\r\n                <button onClick={this.toggle}>\r\n                    toggle\r\n                </button>\r\n                <SockJSClient\r\n                    url={'http://localhost:9000/ws'}\r\n                    topics={['/topic/public']}\r\n                    onMessage={(message) => { this.onMessageRecieved(message); }}\r\n                    ref={(client) => { this.clientRef = client }}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}