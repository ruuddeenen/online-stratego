{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport { PRESS_EVENT_TIMER_NAME } from '../constants';\nimport TouchEnvironmentActivation from './TouchEnvironmentActivation';\n\nvar PressActivation = function (_TouchEnvironmentActi) {\n  _inherits(PressActivation, _TouchEnvironmentActi);\n\n  function PressActivation(_ref) {\n    var onIsActiveChanged = _ref.onIsActiveChanged,\n        pressDurationInMs = _ref.pressDurationInMs,\n        pressMoveThreshold = _ref.pressMoveThreshold;\n\n    _classCallCheck(this, PressActivation);\n\n    var _this = _possibleConstructorReturn(this, (PressActivation.__proto__ || Object.getPrototypeOf(PressActivation)).call(this, {\n      onIsActiveChanged: onIsActiveChanged\n    }));\n\n    _this.pressDurationInMs = pressDurationInMs;\n    _this.pressMoveThreshold = pressMoveThreshold;\n    return _this;\n  }\n\n  _createClass(PressActivation, [{\n    key: 'touchStarted',\n    value: function touchStarted(_ref2) {\n      var position = _ref2.position;\n      this.initPressEventCriteria(position);\n      this.setPressEventTimer();\n    }\n  }, {\n    key: 'touchMoved',\n    value: function touchMoved(_ref3) {\n      var position = _ref3.position;\n\n      if (this.isActive) {\n        return;\n      }\n\n      this.setPressEventCriteria(position);\n    }\n  }, {\n    key: 'setPressEventTimer',\n    value: function setPressEventTimer() {\n      var _this2 = this;\n\n      this.timers.push({\n        name: PRESS_EVENT_TIMER_NAME,\n        id: setTimeout(function () {\n          if (Math.abs(_this2.currentElTop - _this2.initialElTop) < _this2.pressMoveThreshold) {\n            _this2.activate();\n          }\n        }, this.pressDurationInMs)\n      });\n    }\n  }, {\n    key: 'setPressEventCriteria',\n    value: function setPressEventCriteria(position) {\n      this.currentElTop = position.y;\n    }\n  }, {\n    key: 'initPressEventCriteria',\n    value: function initPressEventCriteria(position) {\n      var top = position.y;\n      this.initialElTop = top;\n      this.currentElTop = top;\n    }\n  }]);\n\n  return PressActivation;\n}(TouchEnvironmentActivation);\n\nexport default PressActivation;","map":null,"metadata":{},"sourceType":"module"}