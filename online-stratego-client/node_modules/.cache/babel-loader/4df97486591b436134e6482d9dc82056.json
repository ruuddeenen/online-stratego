{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruudd\\\\OneDrive - Office 365 Fontys\\\\SE31\\\\Big Idea - Stratego\\\\Project\\\\online-stratego-client\\\\src\\\\pages\\\\Game.js\";\nimport React, { Component } from 'react';\nimport SockJSClient from 'react-stomp';\nconst height = 800,\n      width = 1000;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = message => {\n      this.clientRef.sendMessage('/app/game', JSON.stringify(message));\n      console.log(JSON.stringify(message), 'MESSAGE SEND');\n    };\n\n    this.toggle = () => {\n      this.setState({\n        ready: !this.state.ready\n      });\n      this.sendMessage(this.state);\n    };\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      ready: false,\n      board: [['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN']]\n    }; // Bindings\n\n    this.sendMessage = this.sendMessage.bind(this);\n    this.onMessageRecieved = this.onMessageRecieved.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleOnClick = this.handleOnClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.drawBoard();\n    const canvas = document.getElementById('canvasPawns');\n  }\n\n  drawBoard() {\n    console.log('drawing board');\n    const canvas = document.getElementById('canvasBoard');\n    const context = canvas.getContext('2d');\n    const board = this.state.board;\n    const size = board.length;\n\n    for (var y = 0; y < size; y++) {\n      const field = board[y];\n\n      for (var x = 0; x < size; x++) {\n        if (field[x] === 'OPEN') {\n          context.fillStyle = 'green';\n          context.fillRect(width / size * x, height / size * y, width / size - 1, height / size - 1);\n        } else if (field[x] === 'LAKE') {\n          context.fillStyle = 'blue';\n          context.fillRect(width / size * x, height / size * y, width / size - 1, height / size - 1);\n        }\n      }\n    }\n  }\n\n  handleOnClick(e) {\n    e.persist();\n    console.log(e);\n  }\n\n  onMessageRecieved(message) {\n    console.log(message, 'MESSAGE RECIEVED');\n  }\n\n  handleMouseMove(e) {\n    this.setState({\n      mouseX: e.nativeEvent.offsetX,\n      mouseY: e.nativeEvent.offsetY\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    const _this$state = this.state,\n          x = _this$state.x,\n          y = _this$state.y;\n    return React.createElement(\"div\", {\n      className: \"Layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      style: {\n        paddingBottom: '3rem',\n        fontSize: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Online Stratego\"), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvasWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"canvasBoard\",\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"canvasWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"canvasPawns\",\n      width: width,\n      height: height,\n      onMouseMove: this.handleMouseMove.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \"// Websockets\", React.createElement(\"button\", {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"toggle\"), React.createElement(SockJSClient, {\n      url: 'http://localhost:9000/ws',\n      topics: ['/topic/public'],\n      onMessage: message => {\n        this.onMessageRecieved(message);\n      },\n      ref: client => {\n        this.clientRef = client;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/ruudd/OneDrive - Office 365 Fontys/SE31/Big Idea - Stratego/Project/online-stratego-client/src/pages/Game.js"],"names":["React","Component","SockJSClient","height","width","Game","constructor","props","sendMessage","message","clientRef","JSON","stringify","console","log","toggle","setState","ready","state","mouseX","mouseY","board","bind","onMessageRecieved","handleOnClick","componentDidMount","drawBoard","canvas","document","getElementById","context","getContext","size","length","y","field","x","fillStyle","fillRect","e","persist","handleMouseMove","nativeEvent","offsetX","offsetY","render","paddingBottom","fontSize","client"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SockJSClient from 'react-stomp';\r\n\r\nconst height = 800, width = 1000;\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mouseX: 0,\r\n            mouseY: 0,\r\n            ready: false,\r\n            board: [\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n            ]\r\n        }\r\n\r\n        // Bindings\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.onMessageRecieved = this.onMessageRecieved.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawBoard();\r\n        const canvas = document.getElementById('canvasPawns');\r\n    }\r\n\r\n\r\n    drawBoard() {\r\n        console.log('drawing board');\r\n        const canvas = document.getElementById('canvasBoard');\r\n        const context = canvas.getContext('2d');\r\n\r\n        const board = this.state.board;\r\n        const size = board.length;\r\n\r\n        for (var y = 0; y < size; y++) {\r\n            const field = board[y];\r\n            for (var x = 0; x < size; x++) {\r\n                if (field[x] === 'OPEN') {\r\n                    context.fillStyle = 'green';\r\n                    context.fillRect((width / size) * x, (height / size) * y, width / size - 1, height / size - 1);\r\n                } else if (field[x] === 'LAKE') {\r\n                    context.fillStyle = 'blue';\r\n                    context.fillRect((width / size) * x, (height / size) * y, width / size - 1, height / size - 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnClick(e) {\r\n        e.persist();\r\n        console.log(e);\r\n    }\r\n\r\n    onMessageRecieved(message) {\r\n        console.log(message, 'MESSAGE RECIEVED');\r\n    }\r\n\r\n    sendMessage = (message) => {\r\n        this.clientRef.sendMessage('/app/game', JSON.stringify(message));\r\n        console.log(JSON.stringify(message), 'MESSAGE SEND');\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            ready: !this.state.ready\r\n        });\r\n        this.sendMessage(this.state);\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        this.setState({\r\n            mouseX: e.nativeEvent.offsetX,\r\n            mouseY: e.nativeEvent.offsetY\r\n        });\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { x, y } = this.state;\r\n        return (\r\n            <div className='Layout'>\r\n                <header style={{ paddingBottom: '3rem', fontSize: '40px' }}>\r\n                    Online Stratego\r\n                </header>\r\n\r\n                <div className='row' id='left'>\r\n\r\n                </div>\r\n                <div className='row' id='center'>\r\n                    <div className='grid'>\r\n                        <div className='canvasWrapper'>\r\n                            <canvas id='canvasBoard' width={width} height={height} />\r\n                        </div>\r\n                        <div className='canvasWrapper'>\r\n                            <canvas id='canvasPawns' width={width} height={height} onMouseMove={this.handleMouseMove.bind(this)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row' id='right'>\r\n                </div>\r\n\r\n\r\n                // Websockets\r\n                <button onClick={this.toggle}>\r\n                    toggle\r\n                </button>\r\n                <SockJSClient\r\n                    url={'http://localhost:9000/ws'}\r\n                    topics={['/topic/public']}\r\n                    onMessage={(message) => { this.onMessageRecieved(message); }}\r\n                    ref={(client) => { this.clientRef = client }}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}