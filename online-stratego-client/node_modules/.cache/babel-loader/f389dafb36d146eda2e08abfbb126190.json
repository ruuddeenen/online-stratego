{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruudd\\\\OneDrive - Office 365 Fontys\\\\SE31\\\\Big Idea - Stratego\\\\Project\\\\online-stratego\\\\online-stratego-client\\\\src\\\\pages\\\\Game.js\";\nimport React, { Component } from 'react';\nconst height = 800,\n      width = 1000;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'], ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN']]\n    };\n  }\n\n  componentDidMount() {\n    this.drawBoard();\n  }\n\n  drawBoard() {\n    console.log('drawing board');\n    const canvas = document.getElementById('canvasBoard');\n    const context = canvas.getContext('2d');\n    const board = this.state.board;\n    const size = board.length;\n\n    for (var y = 0; y < size; y++) {\n      const field = board[y];\n\n      for (var x = 0; x < size; x++) {\n        if (field[x] === 'OPEN') {\n          context.fillStyle = 'green';\n          context.fillRect(width / size * x, height / size * y, width / size - 1, height / size - 1);\n        } else if (field[x] = board[y]) {\n          context.fillStyle = 'blue';\n          context.fillRect(width / size * x, height / size * y, width / size - 1, height / size - 1);\n        }\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      style: {\n        paddingBottom: '3rem',\n        fontSize: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Online Stratego\"), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvasWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"canvasBoard\",\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"canvasWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"canvasPawns\",\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/ruudd/OneDrive - Office 365 Fontys/SE31/Big Idea - Stratego/Project/online-stratego/online-stratego-client/src/pages/Game.js"],"names":["React","Component","height","width","Game","constructor","props","state","board","componentDidMount","drawBoard","console","log","canvas","document","getElementById","context","getContext","size","length","y","field","x","fillStyle","fillRect","render","paddingBottom","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst height = 800, width = 1000;\r\n\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            board: [\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN', 'LAKE', 'LAKE', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n                ['OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN', 'OPEN'],\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawBoard();\r\n    }\r\n\r\n\r\n    drawBoard() {\r\n        console.log('drawing board');\r\n        const canvas = document.getElementById('canvasBoard');\r\n        const context = canvas.getContext('2d');\r\n\r\n        const board = this.state.board;\r\n        const size = board.length;\r\n\r\n        for (var y = 0; y < size; y++) {\r\n            const field = board[y];\r\n            for (var x = 0; x < size; x++) {\r\n                if (field[x] === 'OPEN') {\r\n                    context.fillStyle = 'green';\r\n                    context.fillRect((width / size) * x, (height / size) * y, width / size - 1, height / size - 1);\r\n                } else if (field[x] = board[y]){\r\n                    context.fillStyle = 'blue';\r\n                    context.fillRect((width / size) * x, (height / size) * y, width / size - 1, height / size - 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='Layout'>\r\n                <header style={{ paddingBottom: '3rem', fontSize: '40px' }}>\r\n                    Online Stratego\r\n                </header>\r\n\r\n                <div className='row' id='left'>\r\n\r\n                </div>\r\n                <div className='row' id='center'>\r\n                    <div className='grid'>\r\n                        <div className='canvasWrapper'>\r\n                            <canvas id='canvasBoard' width={width} height={height}/>\r\n                        </div>\r\n                        <div className='canvasWrapper'>\r\n                            <canvas id='canvasPawns' width={width} height={height} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row' id='right'>\r\n\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}